# coding: utf-8

"""
    xCherry APIs

    This APIs between xCherry service and SDKs

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from xcherryapi.models.list_process_executions_request import ListProcessExecutionsRequest

class TestListProcessExecutionsRequest(unittest.TestCase):
    """ListProcessExecutionsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListProcessExecutionsRequest:
        """Test ListProcessExecutionsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListProcessExecutionsRequest`
        """
        model = ListProcessExecutionsRequest()
        if include_optional:
            return ListProcessExecutionsRequest(
                namespace = '',
                page_size = 56,
                next_page_token = '',
                status_filter = 'RUNNING',
                start_time_filter = xcherryapi.models.time_range_filter.TimeRangeFilter(
                    earliest_time = 56, 
                    latest_time = 56, ),
                process_type_filter = xcherryapi.models.process_type_filter.ProcessTypeFilter(
                    process_type = '', ),
                process_id_filter = xcherryapi.models.process_id_filter.ProcessIdFilter(
                    process_id = '', )
            )
        else:
            return ListProcessExecutionsRequest(
                namespace = '',
                page_size = 56,
        )
        """

    def testListProcessExecutionsRequest(self):
        """Test ListProcessExecutionsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
