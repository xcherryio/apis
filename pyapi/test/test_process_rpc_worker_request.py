# coding: utf-8

"""
    xCherry APIs

    This APIs between xCherry service and SDKs

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from xcherryapi.models.process_rpc_worker_request import ProcessRpcWorkerRequest

class TestProcessRpcWorkerRequest(unittest.TestCase):
    """ProcessRpcWorkerRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProcessRpcWorkerRequest:
        """Test ProcessRpcWorkerRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProcessRpcWorkerRequest`
        """
        model = ProcessRpcWorkerRequest()
        if include_optional:
            return ProcessRpcWorkerRequest(
                context = xcherryapi.models.context.Context(
                    process_id = '', 
                    process_execution_id = '', 
                    process_started_timestamp = 56, 
                    state_execution_id = '', 
                    first_attempt_timestamp = 56, 
                    attempt = 56, 
                    recover_from_state_execution_id = '', 
                    recover_from_api = 'WAIT_UNTIL_API', ),
                process_type = '',
                rpc_name = '',
                input = xcherryapi.models.encoded_object.EncodedObject(
                    encoding = '', 
                    data = '', ),
                app_database_read_response = xcherryapi.models.app_database_read_response.AppDatabaseReadResponse(
                    tables = [
                        xcherryapi.models.app_database_table_read_response.AppDatabaseTableReadResponse(
                            table_name = '', 
                            rows = [
                                xcherryapi.models.app_database_row_read_response.AppDatabaseRowReadResponse(
                                    columns = [
                                        xcherryapi.models.app_database_column_value.AppDatabaseColumnValue(
                                            column = '', 
                                            query_value = '', )
                                        ], )
                                ], )
                        ], )
            )
        else:
            return ProcessRpcWorkerRequest(
                context = xcherryapi.models.context.Context(
                    process_id = '', 
                    process_execution_id = '', 
                    process_started_timestamp = 56, 
                    state_execution_id = '', 
                    first_attempt_timestamp = 56, 
                    attempt = 56, 
                    recover_from_state_execution_id = '', 
                    recover_from_api = 'WAIT_UNTIL_API', ),
                process_type = '',
                rpc_name = '',
        )
        """

    def testProcessRpcWorkerRequest(self):
        """Test ProcessRpcWorkerRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
