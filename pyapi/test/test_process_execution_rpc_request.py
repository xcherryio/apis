# coding: utf-8

"""
    xCherry APIs

    This APIs between xCherry service and SDKs

    The version of the OpenAPI document: 0.0.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from xcherryapi.models.process_execution_rpc_request import ProcessExecutionRpcRequest

class TestProcessExecutionRpcRequest(unittest.TestCase):
    """ProcessExecutionRpcRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProcessExecutionRpcRequest:
        """Test ProcessExecutionRpcRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProcessExecutionRpcRequest`
        """
        model = ProcessExecutionRpcRequest()
        if include_optional:
            return ProcessExecutionRpcRequest(
                namespace = '',
                process_id = '',
                rpc_name = '',
                input = xcherryapi.models.encoded_object.EncodedObject(
                    encoding = '', 
                    data = '', ),
                timeout_seconds = 56,
                app_database_read_request = xcherryapi.models.app_database_read_request.AppDatabaseReadRequest(
                    tables = [
                        xcherryapi.models.app_database_table_read_request.AppDatabaseTableReadRequest(
                            table_name = '', 
                            lock_type = 'NO_LOCKING', 
                            columns = [
                                ''
                                ], )
                        ], )
            )
        else:
            return ProcessExecutionRpcRequest(
                namespace = '',
                process_id = '',
                rpc_name = '',
        )
        """

    def testProcessExecutionRpcRequest(self):
        """Test ProcessExecutionRpcRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
