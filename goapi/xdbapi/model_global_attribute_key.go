/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the GlobalAttributeKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalAttributeKey{}

// GlobalAttributeKey the definition(key) for getting value of a global attribute
type GlobalAttributeKey struct {
	// the column name that can be used in the database query, see below for example
	DbColumn string `json:"dbColumn"`
	// if not empty, the global attribute is mapped to a different table name than the default table. Must be used with alternativeTableForeignKeyColumn
	AlternativeTable *string `json:"alternativeTable,omitempty"`
	// Must present when alternativeTable is not empty. It means the foreign key column to join with the primary key of the default table
	AlternativeTableForeignKeyColumn *string `json:"alternativeTableForeignKeyColumn,omitempty"`
}

// NewGlobalAttributeKey instantiates a new GlobalAttributeKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalAttributeKey(dbColumn string) *GlobalAttributeKey {
	this := GlobalAttributeKey{}
	this.DbColumn = dbColumn
	return &this
}

// NewGlobalAttributeKeyWithDefaults instantiates a new GlobalAttributeKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalAttributeKeyWithDefaults() *GlobalAttributeKey {
	this := GlobalAttributeKey{}
	return &this
}

// GetDbColumn returns the DbColumn field value
func (o *GlobalAttributeKey) GetDbColumn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DbColumn
}

// GetDbColumnOk returns a tuple with the DbColumn field value
// and a boolean to check if the value has been set.
func (o *GlobalAttributeKey) GetDbColumnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DbColumn, true
}

// SetDbColumn sets field value
func (o *GlobalAttributeKey) SetDbColumn(v string) {
	o.DbColumn = v
}

// GetAlternativeTable returns the AlternativeTable field value if set, zero value otherwise.
func (o *GlobalAttributeKey) GetAlternativeTable() string {
	if o == nil || IsNil(o.AlternativeTable) {
		var ret string
		return ret
	}
	return *o.AlternativeTable
}

// GetAlternativeTableOk returns a tuple with the AlternativeTable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAttributeKey) GetAlternativeTableOk() (*string, bool) {
	if o == nil || IsNil(o.AlternativeTable) {
		return nil, false
	}
	return o.AlternativeTable, true
}

// HasAlternativeTable returns a boolean if a field has been set.
func (o *GlobalAttributeKey) HasAlternativeTable() bool {
	if o != nil && !IsNil(o.AlternativeTable) {
		return true
	}

	return false
}

// SetAlternativeTable gets a reference to the given string and assigns it to the AlternativeTable field.
func (o *GlobalAttributeKey) SetAlternativeTable(v string) {
	o.AlternativeTable = &v
}

// GetAlternativeTableForeignKeyColumn returns the AlternativeTableForeignKeyColumn field value if set, zero value otherwise.
func (o *GlobalAttributeKey) GetAlternativeTableForeignKeyColumn() string {
	if o == nil || IsNil(o.AlternativeTableForeignKeyColumn) {
		var ret string
		return ret
	}
	return *o.AlternativeTableForeignKeyColumn
}

// GetAlternativeTableForeignKeyColumnOk returns a tuple with the AlternativeTableForeignKeyColumn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAttributeKey) GetAlternativeTableForeignKeyColumnOk() (*string, bool) {
	if o == nil || IsNil(o.AlternativeTableForeignKeyColumn) {
		return nil, false
	}
	return o.AlternativeTableForeignKeyColumn, true
}

// HasAlternativeTableForeignKeyColumn returns a boolean if a field has been set.
func (o *GlobalAttributeKey) HasAlternativeTableForeignKeyColumn() bool {
	if o != nil && !IsNil(o.AlternativeTableForeignKeyColumn) {
		return true
	}

	return false
}

// SetAlternativeTableForeignKeyColumn gets a reference to the given string and assigns it to the AlternativeTableForeignKeyColumn field.
func (o *GlobalAttributeKey) SetAlternativeTableForeignKeyColumn(v string) {
	o.AlternativeTableForeignKeyColumn = &v
}

func (o GlobalAttributeKey) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalAttributeKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dbColumn"] = o.DbColumn
	if !IsNil(o.AlternativeTable) {
		toSerialize["alternativeTable"] = o.AlternativeTable
	}
	if !IsNil(o.AlternativeTableForeignKeyColumn) {
		toSerialize["alternativeTableForeignKeyColumn"] = o.AlternativeTableForeignKeyColumn
	}
	return toSerialize, nil
}

type NullableGlobalAttributeKey struct {
	value *GlobalAttributeKey
	isSet bool
}

func (v NullableGlobalAttributeKey) Get() *GlobalAttributeKey {
	return v.value
}

func (v *NullableGlobalAttributeKey) Set(val *GlobalAttributeKey) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalAttributeKey) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalAttributeKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalAttributeKey(val *GlobalAttributeKey) *NullableGlobalAttributeKey {
	return &NullableGlobalAttributeKey{value: val, isSet: true}
}

func (v NullableGlobalAttributeKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalAttributeKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
