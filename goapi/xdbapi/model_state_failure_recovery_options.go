/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the StateFailureRecoveryOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StateFailureRecoveryOptions{}

// StateFailureRecoveryOptions struct for StateFailureRecoveryOptions
type StateFailureRecoveryOptions struct {
	Policy                         StateFailureRecoveryPolicy `json:"policy"`
	StateFailureProceedStateId     *string                    `json:"stateFailureProceedStateId,omitempty"`
	StateFailureProceedStateConfig *AsyncStateConfig          `json:"stateFailureProceedStateConfig,omitempty"`
}

// NewStateFailureRecoveryOptions instantiates a new StateFailureRecoveryOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStateFailureRecoveryOptions(policy StateFailureRecoveryPolicy) *StateFailureRecoveryOptions {
	this := StateFailureRecoveryOptions{}
	this.Policy = policy
	return &this
}

// NewStateFailureRecoveryOptionsWithDefaults instantiates a new StateFailureRecoveryOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStateFailureRecoveryOptionsWithDefaults() *StateFailureRecoveryOptions {
	this := StateFailureRecoveryOptions{}
	return &this
}

// GetPolicy returns the Policy field value
func (o *StateFailureRecoveryOptions) GetPolicy() StateFailureRecoveryPolicy {
	if o == nil {
		var ret StateFailureRecoveryPolicy
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *StateFailureRecoveryOptions) GetPolicyOk() (*StateFailureRecoveryPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *StateFailureRecoveryOptions) SetPolicy(v StateFailureRecoveryPolicy) {
	o.Policy = v
}

// GetStateFailureProceedStateId returns the StateFailureProceedStateId field value if set, zero value otherwise.
func (o *StateFailureRecoveryOptions) GetStateFailureProceedStateId() string {
	if o == nil || IsNil(o.StateFailureProceedStateId) {
		var ret string
		return ret
	}
	return *o.StateFailureProceedStateId
}

// GetStateFailureProceedStateIdOk returns a tuple with the StateFailureProceedStateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StateFailureRecoveryOptions) GetStateFailureProceedStateIdOk() (*string, bool) {
	if o == nil || IsNil(o.StateFailureProceedStateId) {
		return nil, false
	}
	return o.StateFailureProceedStateId, true
}

// HasStateFailureProceedStateId returns a boolean if a field has been set.
func (o *StateFailureRecoveryOptions) HasStateFailureProceedStateId() bool {
	if o != nil && !IsNil(o.StateFailureProceedStateId) {
		return true
	}

	return false
}

// SetStateFailureProceedStateId gets a reference to the given string and assigns it to the StateFailureProceedStateId field.
func (o *StateFailureRecoveryOptions) SetStateFailureProceedStateId(v string) {
	o.StateFailureProceedStateId = &v
}

// GetStateFailureProceedStateConfig returns the StateFailureProceedStateConfig field value if set, zero value otherwise.
func (o *StateFailureRecoveryOptions) GetStateFailureProceedStateConfig() AsyncStateConfig {
	if o == nil || IsNil(o.StateFailureProceedStateConfig) {
		var ret AsyncStateConfig
		return ret
	}
	return *o.StateFailureProceedStateConfig
}

// GetStateFailureProceedStateConfigOk returns a tuple with the StateFailureProceedStateConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StateFailureRecoveryOptions) GetStateFailureProceedStateConfigOk() (*AsyncStateConfig, bool) {
	if o == nil || IsNil(o.StateFailureProceedStateConfig) {
		return nil, false
	}
	return o.StateFailureProceedStateConfig, true
}

// HasStateFailureProceedStateConfig returns a boolean if a field has been set.
func (o *StateFailureRecoveryOptions) HasStateFailureProceedStateConfig() bool {
	if o != nil && !IsNil(o.StateFailureProceedStateConfig) {
		return true
	}

	return false
}

// SetStateFailureProceedStateConfig gets a reference to the given AsyncStateConfig and assigns it to the StateFailureProceedStateConfig field.
func (o *StateFailureRecoveryOptions) SetStateFailureProceedStateConfig(v AsyncStateConfig) {
	o.StateFailureProceedStateConfig = &v
}

func (o StateFailureRecoveryOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StateFailureRecoveryOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policy"] = o.Policy
	if !IsNil(o.StateFailureProceedStateId) {
		toSerialize["stateFailureProceedStateId"] = o.StateFailureProceedStateId
	}
	if !IsNil(o.StateFailureProceedStateConfig) {
		toSerialize["stateFailureProceedStateConfig"] = o.StateFailureProceedStateConfig
	}
	return toSerialize, nil
}

type NullableStateFailureRecoveryOptions struct {
	value *StateFailureRecoveryOptions
	isSet bool
}

func (v NullableStateFailureRecoveryOptions) Get() *StateFailureRecoveryOptions {
	return v.value
}

func (v *NullableStateFailureRecoveryOptions) Set(val *StateFailureRecoveryOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableStateFailureRecoveryOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableStateFailureRecoveryOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStateFailureRecoveryOptions(val *StateFailureRecoveryOptions) *NullableStateFailureRecoveryOptions {
	return &NullableStateFailureRecoveryOptions{value: val, isSet: true}
}

func (v NullableStateFailureRecoveryOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStateFailureRecoveryOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
