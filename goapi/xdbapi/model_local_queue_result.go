/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the LocalQueueResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocalQueueResult{}

// LocalQueueResult struct for LocalQueueResult
type LocalQueueResult struct {
	Status    LocalQueueStatus          `json:"status"`
	QueueName string                    `json:"queueName"`
	Messages  []LocalQueueMessageResult `json:"messages,omitempty"`
}

// NewLocalQueueResult instantiates a new LocalQueueResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalQueueResult(status LocalQueueStatus, queueName string) *LocalQueueResult {
	this := LocalQueueResult{}
	this.Status = status
	this.QueueName = queueName
	return &this
}

// NewLocalQueueResultWithDefaults instantiates a new LocalQueueResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalQueueResultWithDefaults() *LocalQueueResult {
	this := LocalQueueResult{}
	return &this
}

// GetStatus returns the Status field value
func (o *LocalQueueResult) GetStatus() LocalQueueStatus {
	if o == nil {
		var ret LocalQueueStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *LocalQueueResult) GetStatusOk() (*LocalQueueStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *LocalQueueResult) SetStatus(v LocalQueueStatus) {
	o.Status = v
}

// GetQueueName returns the QueueName field value
func (o *LocalQueueResult) GetQueueName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueueName
}

// GetQueueNameOk returns a tuple with the QueueName field value
// and a boolean to check if the value has been set.
func (o *LocalQueueResult) GetQueueNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueueName, true
}

// SetQueueName sets field value
func (o *LocalQueueResult) SetQueueName(v string) {
	o.QueueName = v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *LocalQueueResult) GetMessages() []LocalQueueMessageResult {
	if o == nil || IsNil(o.Messages) {
		var ret []LocalQueueMessageResult
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalQueueResult) GetMessagesOk() ([]LocalQueueMessageResult, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *LocalQueueResult) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []LocalQueueMessageResult and assigns it to the Messages field.
func (o *LocalQueueResult) SetMessages(v []LocalQueueMessageResult) {
	o.Messages = v
}

func (o LocalQueueResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalQueueResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["queueName"] = o.QueueName
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	return toSerialize, nil
}

type NullableLocalQueueResult struct {
	value *LocalQueueResult
	isSet bool
}

func (v NullableLocalQueueResult) Get() *LocalQueueResult {
	return v.value
}

func (v *NullableLocalQueueResult) Set(val *LocalQueueResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalQueueResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalQueueResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalQueueResult(val *LocalQueueResult) *NullableLocalQueueResult {
	return &NullableLocalQueueResult{value: val, isSet: true}
}

func (v NullableLocalQueueResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalQueueResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
