/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the TableColumnValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TableColumnValue{}

// TableColumnValue the value of a global attribute table (from SDK to server or from server to SDK)
type TableColumnValue struct {
	// the column name that can be used in the database query, see below for example
	DbColumn string `json:"dbColumn"`
	// the plain string value that can be used in the database query(e.g. for SQL SELECT ... WHERE $Column=$dbQueryValue or UPDATE/INSERT)
	DbQueryValue string `json:"dbQueryValue"`
}

// NewTableColumnValue instantiates a new TableColumnValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTableColumnValue(dbColumn string, dbQueryValue string) *TableColumnValue {
	this := TableColumnValue{}
	this.DbColumn = dbColumn
	this.DbQueryValue = dbQueryValue
	return &this
}

// NewTableColumnValueWithDefaults instantiates a new TableColumnValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTableColumnValueWithDefaults() *TableColumnValue {
	this := TableColumnValue{}
	return &this
}

// GetDbColumn returns the DbColumn field value
func (o *TableColumnValue) GetDbColumn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DbColumn
}

// GetDbColumnOk returns a tuple with the DbColumn field value
// and a boolean to check if the value has been set.
func (o *TableColumnValue) GetDbColumnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DbColumn, true
}

// SetDbColumn sets field value
func (o *TableColumnValue) SetDbColumn(v string) {
	o.DbColumn = v
}

// GetDbQueryValue returns the DbQueryValue field value
func (o *TableColumnValue) GetDbQueryValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DbQueryValue
}

// GetDbQueryValueOk returns a tuple with the DbQueryValue field value
// and a boolean to check if the value has been set.
func (o *TableColumnValue) GetDbQueryValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DbQueryValue, true
}

// SetDbQueryValue sets field value
func (o *TableColumnValue) SetDbQueryValue(v string) {
	o.DbQueryValue = v
}

func (o TableColumnValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TableColumnValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dbColumn"] = o.DbColumn
	toSerialize["dbQueryValue"] = o.DbQueryValue
	return toSerialize, nil
}

type NullableTableColumnValue struct {
	value *TableColumnValue
	isSet bool
}

func (v NullableTableColumnValue) Get() *TableColumnValue {
	return v.value
}

func (v *NullableTableColumnValue) Set(val *TableColumnValue) {
	v.value = val
	v.isSet = true
}

func (v NullableTableColumnValue) IsSet() bool {
	return v.isSet
}

func (v *NullableTableColumnValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTableColumnValue(val *TableColumnValue) *NullableTableColumnValue {
	return &NullableTableColumnValue{value: val, isSet: true}
}

func (v NullableTableColumnValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTableColumnValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
