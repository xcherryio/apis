/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the ProcessRpcResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessRpcResponse{}

// ProcessRpcResponse the output of the rpc API
type ProcessRpcResponse struct {
	Output                  *EncodedObject                  `json:"output,omitempty"`
	StateDecision           StateDecision                   `json:"stateDecision"`
	PublishToLocalQueue     []LocalQueueMessage             `json:"publishToLocalQueue,omitempty"`
	WriteToGlobalAttributes []GlobalAttributeTableRowUpdate `json:"writeToGlobalAttributes,omitempty"`
}

// NewProcessRpcResponse instantiates a new ProcessRpcResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessRpcResponse(stateDecision StateDecision) *ProcessRpcResponse {
	this := ProcessRpcResponse{}
	this.StateDecision = stateDecision
	return &this
}

// NewProcessRpcResponseWithDefaults instantiates a new ProcessRpcResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessRpcResponseWithDefaults() *ProcessRpcResponse {
	this := ProcessRpcResponse{}
	return &this
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *ProcessRpcResponse) GetOutput() EncodedObject {
	if o == nil || IsNil(o.Output) {
		var ret EncodedObject
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessRpcResponse) GetOutputOk() (*EncodedObject, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *ProcessRpcResponse) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given EncodedObject and assigns it to the Output field.
func (o *ProcessRpcResponse) SetOutput(v EncodedObject) {
	o.Output = &v
}

// GetStateDecision returns the StateDecision field value
func (o *ProcessRpcResponse) GetStateDecision() StateDecision {
	if o == nil {
		var ret StateDecision
		return ret
	}

	return o.StateDecision
}

// GetStateDecisionOk returns a tuple with the StateDecision field value
// and a boolean to check if the value has been set.
func (o *ProcessRpcResponse) GetStateDecisionOk() (*StateDecision, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateDecision, true
}

// SetStateDecision sets field value
func (o *ProcessRpcResponse) SetStateDecision(v StateDecision) {
	o.StateDecision = v
}

// GetPublishToLocalQueue returns the PublishToLocalQueue field value if set, zero value otherwise.
func (o *ProcessRpcResponse) GetPublishToLocalQueue() []LocalQueueMessage {
	if o == nil || IsNil(o.PublishToLocalQueue) {
		var ret []LocalQueueMessage
		return ret
	}
	return o.PublishToLocalQueue
}

// GetPublishToLocalQueueOk returns a tuple with the PublishToLocalQueue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessRpcResponse) GetPublishToLocalQueueOk() ([]LocalQueueMessage, bool) {
	if o == nil || IsNil(o.PublishToLocalQueue) {
		return nil, false
	}
	return o.PublishToLocalQueue, true
}

// HasPublishToLocalQueue returns a boolean if a field has been set.
func (o *ProcessRpcResponse) HasPublishToLocalQueue() bool {
	if o != nil && !IsNil(o.PublishToLocalQueue) {
		return true
	}

	return false
}

// SetPublishToLocalQueue gets a reference to the given []LocalQueueMessage and assigns it to the PublishToLocalQueue field.
func (o *ProcessRpcResponse) SetPublishToLocalQueue(v []LocalQueueMessage) {
	o.PublishToLocalQueue = v
}

// GetWriteToGlobalAttributes returns the WriteToGlobalAttributes field value if set, zero value otherwise.
func (o *ProcessRpcResponse) GetWriteToGlobalAttributes() []GlobalAttributeTableRowUpdate {
	if o == nil || IsNil(o.WriteToGlobalAttributes) {
		var ret []GlobalAttributeTableRowUpdate
		return ret
	}
	return o.WriteToGlobalAttributes
}

// GetWriteToGlobalAttributesOk returns a tuple with the WriteToGlobalAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessRpcResponse) GetWriteToGlobalAttributesOk() ([]GlobalAttributeTableRowUpdate, bool) {
	if o == nil || IsNil(o.WriteToGlobalAttributes) {
		return nil, false
	}
	return o.WriteToGlobalAttributes, true
}

// HasWriteToGlobalAttributes returns a boolean if a field has been set.
func (o *ProcessRpcResponse) HasWriteToGlobalAttributes() bool {
	if o != nil && !IsNil(o.WriteToGlobalAttributes) {
		return true
	}

	return false
}

// SetWriteToGlobalAttributes gets a reference to the given []GlobalAttributeTableRowUpdate and assigns it to the WriteToGlobalAttributes field.
func (o *ProcessRpcResponse) SetWriteToGlobalAttributes(v []GlobalAttributeTableRowUpdate) {
	o.WriteToGlobalAttributes = v
}

func (o ProcessRpcResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessRpcResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	toSerialize["stateDecision"] = o.StateDecision
	if !IsNil(o.PublishToLocalQueue) {
		toSerialize["publishToLocalQueue"] = o.PublishToLocalQueue
	}
	if !IsNil(o.WriteToGlobalAttributes) {
		toSerialize["writeToGlobalAttributes"] = o.WriteToGlobalAttributes
	}
	return toSerialize, nil
}

type NullableProcessRpcResponse struct {
	value *ProcessRpcResponse
	isSet bool
}

func (v NullableProcessRpcResponse) Get() *ProcessRpcResponse {
	return v.value
}

func (v *NullableProcessRpcResponse) Set(val *ProcessRpcResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessRpcResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessRpcResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessRpcResponse(val *ProcessRpcResponse) *NullableProcessRpcResponse {
	return &NullableProcessRpcResponse{value: val, isSet: true}
}

func (v NullableProcessRpcResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessRpcResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
