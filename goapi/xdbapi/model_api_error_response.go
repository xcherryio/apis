/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the ApiErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiErrorResponse{}

// ApiErrorResponse struct for ApiErrorResponse
type ApiErrorResponse struct {
	Detail                    *string `json:"detail,omitempty"`
	OriginalWorkerErrorDetail *string `json:"originalWorkerErrorDetail,omitempty"`
	OriginalWorkerErrorType   *string `json:"originalWorkerErrorType,omitempty"`
	OriginalWorkerErrorStatus *int32  `json:"originalWorkerErrorStatus,omitempty"`
}

// NewApiErrorResponse instantiates a new ApiErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiErrorResponse() *ApiErrorResponse {
	this := ApiErrorResponse{}
	return &this
}

// NewApiErrorResponseWithDefaults instantiates a new ApiErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiErrorResponseWithDefaults() *ApiErrorResponse {
	this := ApiErrorResponse{}
	return &this
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *ApiErrorResponse) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorResponse) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *ApiErrorResponse) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *ApiErrorResponse) SetDetail(v string) {
	o.Detail = &v
}

// GetOriginalWorkerErrorDetail returns the OriginalWorkerErrorDetail field value if set, zero value otherwise.
func (o *ApiErrorResponse) GetOriginalWorkerErrorDetail() string {
	if o == nil || IsNil(o.OriginalWorkerErrorDetail) {
		var ret string
		return ret
	}
	return *o.OriginalWorkerErrorDetail
}

// GetOriginalWorkerErrorDetailOk returns a tuple with the OriginalWorkerErrorDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorResponse) GetOriginalWorkerErrorDetailOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalWorkerErrorDetail) {
		return nil, false
	}
	return o.OriginalWorkerErrorDetail, true
}

// HasOriginalWorkerErrorDetail returns a boolean if a field has been set.
func (o *ApiErrorResponse) HasOriginalWorkerErrorDetail() bool {
	if o != nil && !IsNil(o.OriginalWorkerErrorDetail) {
		return true
	}

	return false
}

// SetOriginalWorkerErrorDetail gets a reference to the given string and assigns it to the OriginalWorkerErrorDetail field.
func (o *ApiErrorResponse) SetOriginalWorkerErrorDetail(v string) {
	o.OriginalWorkerErrorDetail = &v
}

// GetOriginalWorkerErrorType returns the OriginalWorkerErrorType field value if set, zero value otherwise.
func (o *ApiErrorResponse) GetOriginalWorkerErrorType() string {
	if o == nil || IsNil(o.OriginalWorkerErrorType) {
		var ret string
		return ret
	}
	return *o.OriginalWorkerErrorType
}

// GetOriginalWorkerErrorTypeOk returns a tuple with the OriginalWorkerErrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorResponse) GetOriginalWorkerErrorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalWorkerErrorType) {
		return nil, false
	}
	return o.OriginalWorkerErrorType, true
}

// HasOriginalWorkerErrorType returns a boolean if a field has been set.
func (o *ApiErrorResponse) HasOriginalWorkerErrorType() bool {
	if o != nil && !IsNil(o.OriginalWorkerErrorType) {
		return true
	}

	return false
}

// SetOriginalWorkerErrorType gets a reference to the given string and assigns it to the OriginalWorkerErrorType field.
func (o *ApiErrorResponse) SetOriginalWorkerErrorType(v string) {
	o.OriginalWorkerErrorType = &v
}

// GetOriginalWorkerErrorStatus returns the OriginalWorkerErrorStatus field value if set, zero value otherwise.
func (o *ApiErrorResponse) GetOriginalWorkerErrorStatus() int32 {
	if o == nil || IsNil(o.OriginalWorkerErrorStatus) {
		var ret int32
		return ret
	}
	return *o.OriginalWorkerErrorStatus
}

// GetOriginalWorkerErrorStatusOk returns a tuple with the OriginalWorkerErrorStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiErrorResponse) GetOriginalWorkerErrorStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.OriginalWorkerErrorStatus) {
		return nil, false
	}
	return o.OriginalWorkerErrorStatus, true
}

// HasOriginalWorkerErrorStatus returns a boolean if a field has been set.
func (o *ApiErrorResponse) HasOriginalWorkerErrorStatus() bool {
	if o != nil && !IsNil(o.OriginalWorkerErrorStatus) {
		return true
	}

	return false
}

// SetOriginalWorkerErrorStatus gets a reference to the given int32 and assigns it to the OriginalWorkerErrorStatus field.
func (o *ApiErrorResponse) SetOriginalWorkerErrorStatus(v int32) {
	o.OriginalWorkerErrorStatus = &v
}

func (o ApiErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.OriginalWorkerErrorDetail) {
		toSerialize["originalWorkerErrorDetail"] = o.OriginalWorkerErrorDetail
	}
	if !IsNil(o.OriginalWorkerErrorType) {
		toSerialize["originalWorkerErrorType"] = o.OriginalWorkerErrorType
	}
	if !IsNil(o.OriginalWorkerErrorStatus) {
		toSerialize["originalWorkerErrorStatus"] = o.OriginalWorkerErrorStatus
	}
	return toSerialize, nil
}

type NullableApiErrorResponse struct {
	value *ApiErrorResponse
	isSet bool
}

func (v NullableApiErrorResponse) Get() *ApiErrorResponse {
	return v.value
}

func (v *NullableApiErrorResponse) Set(val *ApiErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApiErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApiErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiErrorResponse(val *ApiErrorResponse) *NullableApiErrorResponse {
	return &NullableApiErrorResponse{value: val, isSet: true}
}

func (v NullableApiErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
