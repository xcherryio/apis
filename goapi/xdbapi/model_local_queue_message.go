/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the LocalQueueMessage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocalQueueMessage{}

// LocalQueueMessage struct for LocalQueueMessage
type LocalQueueMessage struct {
	QueueName string `json:"queueName"`
	// UUID to uniquely distinguish different messages. If not specified, the server will generate a UUID instead.
	DedupId *string        `json:"dedupId,omitempty"`
	Payload *EncodedObject `json:"payload,omitempty"`
}

// NewLocalQueueMessage instantiates a new LocalQueueMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalQueueMessage(queueName string) *LocalQueueMessage {
	this := LocalQueueMessage{}
	this.QueueName = queueName
	return &this
}

// NewLocalQueueMessageWithDefaults instantiates a new LocalQueueMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalQueueMessageWithDefaults() *LocalQueueMessage {
	this := LocalQueueMessage{}
	return &this
}

// GetQueueName returns the QueueName field value
func (o *LocalQueueMessage) GetQueueName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueueName
}

// GetQueueNameOk returns a tuple with the QueueName field value
// and a boolean to check if the value has been set.
func (o *LocalQueueMessage) GetQueueNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueueName, true
}

// SetQueueName sets field value
func (o *LocalQueueMessage) SetQueueName(v string) {
	o.QueueName = v
}

// GetDedupId returns the DedupId field value if set, zero value otherwise.
func (o *LocalQueueMessage) GetDedupId() string {
	if o == nil || IsNil(o.DedupId) {
		var ret string
		return ret
	}
	return *o.DedupId
}

// GetDedupIdOk returns a tuple with the DedupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalQueueMessage) GetDedupIdOk() (*string, bool) {
	if o == nil || IsNil(o.DedupId) {
		return nil, false
	}
	return o.DedupId, true
}

// HasDedupId returns a boolean if a field has been set.
func (o *LocalQueueMessage) HasDedupId() bool {
	if o != nil && !IsNil(o.DedupId) {
		return true
	}

	return false
}

// SetDedupId gets a reference to the given string and assigns it to the DedupId field.
func (o *LocalQueueMessage) SetDedupId(v string) {
	o.DedupId = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *LocalQueueMessage) GetPayload() EncodedObject {
	if o == nil || IsNil(o.Payload) {
		var ret EncodedObject
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalQueueMessage) GetPayloadOk() (*EncodedObject, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *LocalQueueMessage) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given EncodedObject and assigns it to the Payload field.
func (o *LocalQueueMessage) SetPayload(v EncodedObject) {
	o.Payload = &v
}

func (o LocalQueueMessage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalQueueMessage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["queueName"] = o.QueueName
	if !IsNil(o.DedupId) {
		toSerialize["dedupId"] = o.DedupId
	}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableLocalQueueMessage struct {
	value *LocalQueueMessage
	isSet bool
}

func (v NullableLocalQueueMessage) Get() *LocalQueueMessage {
	return v.value
}

func (v *NullableLocalQueueMessage) Set(val *LocalQueueMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalQueueMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalQueueMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalQueueMessage(val *LocalQueueMessage) *NullableLocalQueueMessage {
	return &NullableLocalQueueMessage{value: val, isSet: true}
}

func (v NullableLocalQueueMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalQueueMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
