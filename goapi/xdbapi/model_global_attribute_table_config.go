/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the GlobalAttributeTableConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalAttributeTableConfig{}

// GlobalAttributeTableConfig struct for GlobalAttributeTableConfig
type GlobalAttributeTableConfig struct {
	TableName        string                      `json:"tableName"`
	PrimaryKey       []TableColumnValue          `json:"primaryKey"`
	InitialWrite     []TableColumnValue          `json:"initialWrite,omitempty"`
	InitialWriteMode *AttributeWriteConflictMode `json:"initialWriteMode,omitempty"`
}

// NewGlobalAttributeTableConfig instantiates a new GlobalAttributeTableConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalAttributeTableConfig(tableName string, primaryKey []TableColumnValue) *GlobalAttributeTableConfig {
	this := GlobalAttributeTableConfig{}
	this.TableName = tableName
	this.PrimaryKey = primaryKey
	return &this
}

// NewGlobalAttributeTableConfigWithDefaults instantiates a new GlobalAttributeTableConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalAttributeTableConfigWithDefaults() *GlobalAttributeTableConfig {
	this := GlobalAttributeTableConfig{}
	return &this
}

// GetTableName returns the TableName field value
func (o *GlobalAttributeTableConfig) GetTableName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TableName
}

// GetTableNameOk returns a tuple with the TableName field value
// and a boolean to check if the value has been set.
func (o *GlobalAttributeTableConfig) GetTableNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TableName, true
}

// SetTableName sets field value
func (o *GlobalAttributeTableConfig) SetTableName(v string) {
	o.TableName = v
}

// GetPrimaryKey returns the PrimaryKey field value
func (o *GlobalAttributeTableConfig) GetPrimaryKey() []TableColumnValue {
	if o == nil {
		var ret []TableColumnValue
		return ret
	}

	return o.PrimaryKey
}

// GetPrimaryKeyOk returns a tuple with the PrimaryKey field value
// and a boolean to check if the value has been set.
func (o *GlobalAttributeTableConfig) GetPrimaryKeyOk() ([]TableColumnValue, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryKey, true
}

// SetPrimaryKey sets field value
func (o *GlobalAttributeTableConfig) SetPrimaryKey(v []TableColumnValue) {
	o.PrimaryKey = v
}

// GetInitialWrite returns the InitialWrite field value if set, zero value otherwise.
func (o *GlobalAttributeTableConfig) GetInitialWrite() []TableColumnValue {
	if o == nil || IsNil(o.InitialWrite) {
		var ret []TableColumnValue
		return ret
	}
	return o.InitialWrite
}

// GetInitialWriteOk returns a tuple with the InitialWrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAttributeTableConfig) GetInitialWriteOk() ([]TableColumnValue, bool) {
	if o == nil || IsNil(o.InitialWrite) {
		return nil, false
	}
	return o.InitialWrite, true
}

// HasInitialWrite returns a boolean if a field has been set.
func (o *GlobalAttributeTableConfig) HasInitialWrite() bool {
	if o != nil && !IsNil(o.InitialWrite) {
		return true
	}

	return false
}

// SetInitialWrite gets a reference to the given []TableColumnValue and assigns it to the InitialWrite field.
func (o *GlobalAttributeTableConfig) SetInitialWrite(v []TableColumnValue) {
	o.InitialWrite = v
}

// GetInitialWriteMode returns the InitialWriteMode field value if set, zero value otherwise.
func (o *GlobalAttributeTableConfig) GetInitialWriteMode() AttributeWriteConflictMode {
	if o == nil || IsNil(o.InitialWriteMode) {
		var ret AttributeWriteConflictMode
		return ret
	}
	return *o.InitialWriteMode
}

// GetInitialWriteModeOk returns a tuple with the InitialWriteMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAttributeTableConfig) GetInitialWriteModeOk() (*AttributeWriteConflictMode, bool) {
	if o == nil || IsNil(o.InitialWriteMode) {
		return nil, false
	}
	return o.InitialWriteMode, true
}

// HasInitialWriteMode returns a boolean if a field has been set.
func (o *GlobalAttributeTableConfig) HasInitialWriteMode() bool {
	if o != nil && !IsNil(o.InitialWriteMode) {
		return true
	}

	return false
}

// SetInitialWriteMode gets a reference to the given AttributeWriteConflictMode and assigns it to the InitialWriteMode field.
func (o *GlobalAttributeTableConfig) SetInitialWriteMode(v AttributeWriteConflictMode) {
	o.InitialWriteMode = &v
}

func (o GlobalAttributeTableConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalAttributeTableConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tableName"] = o.TableName
	toSerialize["primaryKey"] = o.PrimaryKey
	if !IsNil(o.InitialWrite) {
		toSerialize["initialWrite"] = o.InitialWrite
	}
	if !IsNil(o.InitialWriteMode) {
		toSerialize["initialWriteMode"] = o.InitialWriteMode
	}
	return toSerialize, nil
}

type NullableGlobalAttributeTableConfig struct {
	value *GlobalAttributeTableConfig
	isSet bool
}

func (v NullableGlobalAttributeTableConfig) Get() *GlobalAttributeTableConfig {
	return v.value
}

func (v *NullableGlobalAttributeTableConfig) Set(val *GlobalAttributeTableConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalAttributeTableConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalAttributeTableConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalAttributeTableConfig(val *GlobalAttributeTableConfig) *NullableGlobalAttributeTableConfig {
	return &NullableGlobalAttributeTableConfig{value: val, isSet: true}
}

func (v NullableGlobalAttributeTableConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalAttributeTableConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
