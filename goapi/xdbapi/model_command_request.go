/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the CommandRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommandRequest{}

// CommandRequest struct for CommandRequest
type CommandRequest struct {
	WaitingType   CommandWaitingType `json:"waitingType"`
	TimerCommands []TimerCommand     `json:"timerCommands,omitempty"`
}

// NewCommandRequest instantiates a new CommandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommandRequest(waitingType CommandWaitingType) *CommandRequest {
	this := CommandRequest{}
	this.WaitingType = waitingType
	return &this
}

// NewCommandRequestWithDefaults instantiates a new CommandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommandRequestWithDefaults() *CommandRequest {
	this := CommandRequest{}
	return &this
}

// GetWaitingType returns the WaitingType field value
func (o *CommandRequest) GetWaitingType() CommandWaitingType {
	if o == nil {
		var ret CommandWaitingType
		return ret
	}

	return o.WaitingType
}

// GetWaitingTypeOk returns a tuple with the WaitingType field value
// and a boolean to check if the value has been set.
func (o *CommandRequest) GetWaitingTypeOk() (*CommandWaitingType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WaitingType, true
}

// SetWaitingType sets field value
func (o *CommandRequest) SetWaitingType(v CommandWaitingType) {
	o.WaitingType = v
}

// GetTimerCommands returns the TimerCommands field value if set, zero value otherwise.
func (o *CommandRequest) GetTimerCommands() []TimerCommand {
	if o == nil || IsNil(o.TimerCommands) {
		var ret []TimerCommand
		return ret
	}
	return o.TimerCommands
}

// GetTimerCommandsOk returns a tuple with the TimerCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommandRequest) GetTimerCommandsOk() ([]TimerCommand, bool) {
	if o == nil || IsNil(o.TimerCommands) {
		return nil, false
	}
	return o.TimerCommands, true
}

// HasTimerCommands returns a boolean if a field has been set.
func (o *CommandRequest) HasTimerCommands() bool {
	if o != nil && !IsNil(o.TimerCommands) {
		return true
	}

	return false
}

// SetTimerCommands gets a reference to the given []TimerCommand and assigns it to the TimerCommands field.
func (o *CommandRequest) SetTimerCommands(v []TimerCommand) {
	o.TimerCommands = v
}

func (o CommandRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommandRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["waitingType"] = o.WaitingType
	if !IsNil(o.TimerCommands) {
		toSerialize["timerCommands"] = o.TimerCommands
	}
	return toSerialize, nil
}

type NullableCommandRequest struct {
	value *CommandRequest
	isSet bool
}

func (v NullableCommandRequest) Get() *CommandRequest {
	return v.value
}

func (v *NullableCommandRequest) Set(val *CommandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCommandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCommandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommandRequest(val *CommandRequest) *NullableCommandRequest {
	return &NullableCommandRequest{value: val, isSet: true}
}

func (v NullableCommandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
