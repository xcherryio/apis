/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the LoadGlobalAttributesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LoadGlobalAttributesRequest{}

// LoadGlobalAttributesRequest the request to load global attributes
type LoadGlobalAttributesRequest struct {
	Attributes             []GlobalAttributeKey      `json:"attributes,omitempty"`
	DefaultReadLockingType *AttributeReadLockingType `json:"defaultReadLockingType,omitempty"`
	// set a different read policy per table to override the default locking type
	TableReadLockingPolicyOverrides []TableReadLockingPolicy `json:"tableReadLockingPolicyOverrides,omitempty"`
}

// NewLoadGlobalAttributesRequest instantiates a new LoadGlobalAttributesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoadGlobalAttributesRequest() *LoadGlobalAttributesRequest {
	this := LoadGlobalAttributesRequest{}
	return &this
}

// NewLoadGlobalAttributesRequestWithDefaults instantiates a new LoadGlobalAttributesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoadGlobalAttributesRequestWithDefaults() *LoadGlobalAttributesRequest {
	this := LoadGlobalAttributesRequest{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *LoadGlobalAttributesRequest) GetAttributes() []GlobalAttributeKey {
	if o == nil || IsNil(o.Attributes) {
		var ret []GlobalAttributeKey
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadGlobalAttributesRequest) GetAttributesOk() ([]GlobalAttributeKey, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *LoadGlobalAttributesRequest) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []GlobalAttributeKey and assigns it to the Attributes field.
func (o *LoadGlobalAttributesRequest) SetAttributes(v []GlobalAttributeKey) {
	o.Attributes = v
}

// GetDefaultReadLockingType returns the DefaultReadLockingType field value if set, zero value otherwise.
func (o *LoadGlobalAttributesRequest) GetDefaultReadLockingType() AttributeReadLockingType {
	if o == nil || IsNil(o.DefaultReadLockingType) {
		var ret AttributeReadLockingType
		return ret
	}
	return *o.DefaultReadLockingType
}

// GetDefaultReadLockingTypeOk returns a tuple with the DefaultReadLockingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadGlobalAttributesRequest) GetDefaultReadLockingTypeOk() (*AttributeReadLockingType, bool) {
	if o == nil || IsNil(o.DefaultReadLockingType) {
		return nil, false
	}
	return o.DefaultReadLockingType, true
}

// HasDefaultReadLockingType returns a boolean if a field has been set.
func (o *LoadGlobalAttributesRequest) HasDefaultReadLockingType() bool {
	if o != nil && !IsNil(o.DefaultReadLockingType) {
		return true
	}

	return false
}

// SetDefaultReadLockingType gets a reference to the given AttributeReadLockingType and assigns it to the DefaultReadLockingType field.
func (o *LoadGlobalAttributesRequest) SetDefaultReadLockingType(v AttributeReadLockingType) {
	o.DefaultReadLockingType = &v
}

// GetTableReadLockingPolicyOverrides returns the TableReadLockingPolicyOverrides field value if set, zero value otherwise.
func (o *LoadGlobalAttributesRequest) GetTableReadLockingPolicyOverrides() []TableReadLockingPolicy {
	if o == nil || IsNil(o.TableReadLockingPolicyOverrides) {
		var ret []TableReadLockingPolicy
		return ret
	}
	return o.TableReadLockingPolicyOverrides
}

// GetTableReadLockingPolicyOverridesOk returns a tuple with the TableReadLockingPolicyOverrides field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoadGlobalAttributesRequest) GetTableReadLockingPolicyOverridesOk() ([]TableReadLockingPolicy, bool) {
	if o == nil || IsNil(o.TableReadLockingPolicyOverrides) {
		return nil, false
	}
	return o.TableReadLockingPolicyOverrides, true
}

// HasTableReadLockingPolicyOverrides returns a boolean if a field has been set.
func (o *LoadGlobalAttributesRequest) HasTableReadLockingPolicyOverrides() bool {
	if o != nil && !IsNil(o.TableReadLockingPolicyOverrides) {
		return true
	}

	return false
}

// SetTableReadLockingPolicyOverrides gets a reference to the given []TableReadLockingPolicy and assigns it to the TableReadLockingPolicyOverrides field.
func (o *LoadGlobalAttributesRequest) SetTableReadLockingPolicyOverrides(v []TableReadLockingPolicy) {
	o.TableReadLockingPolicyOverrides = v
}

func (o LoadGlobalAttributesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LoadGlobalAttributesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.DefaultReadLockingType) {
		toSerialize["defaultReadLockingType"] = o.DefaultReadLockingType
	}
	if !IsNil(o.TableReadLockingPolicyOverrides) {
		toSerialize["tableReadLockingPolicyOverrides"] = o.TableReadLockingPolicyOverrides
	}
	return toSerialize, nil
}

type NullableLoadGlobalAttributesRequest struct {
	value *LoadGlobalAttributesRequest
	isSet bool
}

func (v NullableLoadGlobalAttributesRequest) Get() *LoadGlobalAttributesRequest {
	return v.value
}

func (v *NullableLoadGlobalAttributesRequest) Set(val *LoadGlobalAttributesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLoadGlobalAttributesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLoadGlobalAttributesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoadGlobalAttributesRequest(val *LoadGlobalAttributesRequest) *NullableLoadGlobalAttributesRequest {
	return &NullableLoadGlobalAttributesRequest{value: val, isSet: true}
}

func (v NullableLoadGlobalAttributesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoadGlobalAttributesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
