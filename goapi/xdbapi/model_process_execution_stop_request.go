/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the ProcessExecutionStopRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessExecutionStopRequest{}

// ProcessExecutionStopRequest the request for stopping a process execution
type ProcessExecutionStopRequest struct {
	Namespace string                    `json:"namespace"`
	ProcessId string                    `json:"processId"`
	StopType  *ProcessExecutionStopType `json:"stopType,omitempty"`
}

// NewProcessExecutionStopRequest instantiates a new ProcessExecutionStopRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessExecutionStopRequest(namespace string, processId string) *ProcessExecutionStopRequest {
	this := ProcessExecutionStopRequest{}
	this.Namespace = namespace
	this.ProcessId = processId
	return &this
}

// NewProcessExecutionStopRequestWithDefaults instantiates a new ProcessExecutionStopRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessExecutionStopRequestWithDefaults() *ProcessExecutionStopRequest {
	this := ProcessExecutionStopRequest{}
	return &this
}

// GetNamespace returns the Namespace field value
func (o *ProcessExecutionStopRequest) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStopRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *ProcessExecutionStopRequest) SetNamespace(v string) {
	o.Namespace = v
}

// GetProcessId returns the ProcessId field value
func (o *ProcessExecutionStopRequest) GetProcessId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStopRequest) GetProcessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessId, true
}

// SetProcessId sets field value
func (o *ProcessExecutionStopRequest) SetProcessId(v string) {
	o.ProcessId = v
}

// GetStopType returns the StopType field value if set, zero value otherwise.
func (o *ProcessExecutionStopRequest) GetStopType() ProcessExecutionStopType {
	if o == nil || IsNil(o.StopType) {
		var ret ProcessExecutionStopType
		return ret
	}
	return *o.StopType
}

// GetStopTypeOk returns a tuple with the StopType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStopRequest) GetStopTypeOk() (*ProcessExecutionStopType, bool) {
	if o == nil || IsNil(o.StopType) {
		return nil, false
	}
	return o.StopType, true
}

// HasStopType returns a boolean if a field has been set.
func (o *ProcessExecutionStopRequest) HasStopType() bool {
	if o != nil && !IsNil(o.StopType) {
		return true
	}

	return false
}

// SetStopType gets a reference to the given ProcessExecutionStopType and assigns it to the StopType field.
func (o *ProcessExecutionStopRequest) SetStopType(v ProcessExecutionStopType) {
	o.StopType = &v
}

func (o ProcessExecutionStopRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessExecutionStopRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["namespace"] = o.Namespace
	toSerialize["processId"] = o.ProcessId
	if !IsNil(o.StopType) {
		toSerialize["stopType"] = o.StopType
	}
	return toSerialize, nil
}

type NullableProcessExecutionStopRequest struct {
	value *ProcessExecutionStopRequest
	isSet bool
}

func (v NullableProcessExecutionStopRequest) Get() *ProcessExecutionStopRequest {
	return v.value
}

func (v *NullableProcessExecutionStopRequest) Set(val *ProcessExecutionStopRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessExecutionStopRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessExecutionStopRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessExecutionStopRequest(val *ProcessExecutionStopRequest) *NullableProcessExecutionStopRequest {
	return &NullableProcessExecutionStopRequest{value: val, isSet: true}
}

func (v NullableProcessExecutionStopRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessExecutionStopRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
