/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the NotifyTimerTasksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyTimerTasksRequest{}

// NotifyTimerTasksRequest struct for NotifyTimerTasksRequest
type NotifyTimerTasksRequest struct {
	ShardId                 int32  `json:"shardId"`
	Namespace               string `json:"namespace"`
	ProcessId               string `json:"processId"`
	ProcessExecutionId      string `json:"processExecutionId"`
	MinTaskTimestampSeconds int64  `json:"minTaskTimestampSeconds"`
}

// NewNotifyTimerTasksRequest instantiates a new NotifyTimerTasksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyTimerTasksRequest(shardId int32, namespace string, processId string, processExecutionId string, minTaskTimestampSeconds int64) *NotifyTimerTasksRequest {
	this := NotifyTimerTasksRequest{}
	this.ShardId = shardId
	this.Namespace = namespace
	this.ProcessId = processId
	this.ProcessExecutionId = processExecutionId
	this.MinTaskTimestampSeconds = minTaskTimestampSeconds
	return &this
}

// NewNotifyTimerTasksRequestWithDefaults instantiates a new NotifyTimerTasksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyTimerTasksRequestWithDefaults() *NotifyTimerTasksRequest {
	this := NotifyTimerTasksRequest{}
	return &this
}

// GetShardId returns the ShardId field value
func (o *NotifyTimerTasksRequest) GetShardId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ShardId
}

// GetShardIdOk returns a tuple with the ShardId field value
// and a boolean to check if the value has been set.
func (o *NotifyTimerTasksRequest) GetShardIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShardId, true
}

// SetShardId sets field value
func (o *NotifyTimerTasksRequest) SetShardId(v int32) {
	o.ShardId = v
}

// GetNamespace returns the Namespace field value
func (o *NotifyTimerTasksRequest) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *NotifyTimerTasksRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *NotifyTimerTasksRequest) SetNamespace(v string) {
	o.Namespace = v
}

// GetProcessId returns the ProcessId field value
func (o *NotifyTimerTasksRequest) GetProcessId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value
// and a boolean to check if the value has been set.
func (o *NotifyTimerTasksRequest) GetProcessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessId, true
}

// SetProcessId sets field value
func (o *NotifyTimerTasksRequest) SetProcessId(v string) {
	o.ProcessId = v
}

// GetProcessExecutionId returns the ProcessExecutionId field value
func (o *NotifyTimerTasksRequest) GetProcessExecutionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessExecutionId
}

// GetProcessExecutionIdOk returns a tuple with the ProcessExecutionId field value
// and a boolean to check if the value has been set.
func (o *NotifyTimerTasksRequest) GetProcessExecutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessExecutionId, true
}

// SetProcessExecutionId sets field value
func (o *NotifyTimerTasksRequest) SetProcessExecutionId(v string) {
	o.ProcessExecutionId = v
}

// GetMinTaskTimestampSeconds returns the MinTaskTimestampSeconds field value
func (o *NotifyTimerTasksRequest) GetMinTaskTimestampSeconds() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MinTaskTimestampSeconds
}

// GetMinTaskTimestampSecondsOk returns a tuple with the MinTaskTimestampSeconds field value
// and a boolean to check if the value has been set.
func (o *NotifyTimerTasksRequest) GetMinTaskTimestampSecondsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinTaskTimestampSeconds, true
}

// SetMinTaskTimestampSeconds sets field value
func (o *NotifyTimerTasksRequest) SetMinTaskTimestampSeconds(v int64) {
	o.MinTaskTimestampSeconds = v
}

func (o NotifyTimerTasksRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyTimerTasksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shardId"] = o.ShardId
	toSerialize["namespace"] = o.Namespace
	toSerialize["processId"] = o.ProcessId
	toSerialize["processExecutionId"] = o.ProcessExecutionId
	toSerialize["minTaskTimestampSeconds"] = o.MinTaskTimestampSeconds
	return toSerialize, nil
}

type NullableNotifyTimerTasksRequest struct {
	value *NotifyTimerTasksRequest
	isSet bool
}

func (v NullableNotifyTimerTasksRequest) Get() *NotifyTimerTasksRequest {
	return v.value
}

func (v *NullableNotifyTimerTasksRequest) Set(val *NotifyTimerTasksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyTimerTasksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyTimerTasksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyTimerTasksRequest(val *NotifyTimerTasksRequest) *NullableNotifyTimerTasksRequest {
	return &NullableNotifyTimerTasksRequest{value: val, isSet: true}
}

func (v NullableNotifyTimerTasksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyTimerTasksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
