/*
XDB APIs

This APIs between xdb service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xdbapi

import (
	"encoding/json"
)

// checks if the TimerResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimerResult{}

// TimerResult struct for TimerResult
type TimerResult struct {
	TimerStatus TimerStatus `json:"timerStatus"`
}

// NewTimerResult instantiates a new TimerResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimerResult(timerStatus TimerStatus) *TimerResult {
	this := TimerResult{}
	this.TimerStatus = timerStatus
	return &this
}

// NewTimerResultWithDefaults instantiates a new TimerResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimerResultWithDefaults() *TimerResult {
	this := TimerResult{}
	return &this
}

// GetTimerStatus returns the TimerStatus field value
func (o *TimerResult) GetTimerStatus() TimerStatus {
	if o == nil {
		var ret TimerStatus
		return ret
	}

	return o.TimerStatus
}

// GetTimerStatusOk returns a tuple with the TimerStatus field value
// and a boolean to check if the value has been set.
func (o *TimerResult) GetTimerStatusOk() (*TimerStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimerStatus, true
}

// SetTimerStatus sets field value
func (o *TimerResult) SetTimerStatus(v TimerStatus) {
	o.TimerStatus = v
}

func (o TimerResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimerResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timerStatus"] = o.TimerStatus
	return toSerialize, nil
}

type NullableTimerResult struct {
	value *TimerResult
	isSet bool
}

func (v NullableTimerResult) Get() *TimerResult {
	return v.value
}

func (v *NullableTimerResult) Set(val *TimerResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTimerResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTimerResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimerResult(val *TimerResult) *NullableTimerResult {
	return &NullableTimerResult{value: val, isSet: true}
}

func (v NullableTimerResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimerResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
