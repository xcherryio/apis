/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"encoding/json"
)

// checks if the AppDatabaseReadRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppDatabaseReadRequest{}

// AppDatabaseReadRequest the request to read the selected rows of configured app database tables
type AppDatabaseReadRequest struct {
	TableRequests []AppDatabaseTableReadRequest `json:"tableRequests,omitempty"`
}

// NewAppDatabaseReadRequest instantiates a new AppDatabaseReadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppDatabaseReadRequest() *AppDatabaseReadRequest {
	this := AppDatabaseReadRequest{}
	return &this
}

// NewAppDatabaseReadRequestWithDefaults instantiates a new AppDatabaseReadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppDatabaseReadRequestWithDefaults() *AppDatabaseReadRequest {
	this := AppDatabaseReadRequest{}
	return &this
}

// GetTableRequests returns the TableRequests field value if set, zero value otherwise.
func (o *AppDatabaseReadRequest) GetTableRequests() []AppDatabaseTableReadRequest {
	if o == nil || IsNil(o.TableRequests) {
		var ret []AppDatabaseTableReadRequest
		return ret
	}
	return o.TableRequests
}

// GetTableRequestsOk returns a tuple with the TableRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDatabaseReadRequest) GetTableRequestsOk() ([]AppDatabaseTableReadRequest, bool) {
	if o == nil || IsNil(o.TableRequests) {
		return nil, false
	}
	return o.TableRequests, true
}

// HasTableRequests returns a boolean if a field has been set.
func (o *AppDatabaseReadRequest) HasTableRequests() bool {
	if o != nil && !IsNil(o.TableRequests) {
		return true
	}

	return false
}

// SetTableRequests gets a reference to the given []AppDatabaseTableReadRequest and assigns it to the TableRequests field.
func (o *AppDatabaseReadRequest) SetTableRequests(v []AppDatabaseTableReadRequest) {
	o.TableRequests = v
}

func (o AppDatabaseReadRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppDatabaseReadRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TableRequests) {
		toSerialize["tableRequests"] = o.TableRequests
	}
	return toSerialize, nil
}

type NullableAppDatabaseReadRequest struct {
	value *AppDatabaseReadRequest
	isSet bool
}

func (v NullableAppDatabaseReadRequest) Get() *AppDatabaseReadRequest {
	return v.value
}

func (v *NullableAppDatabaseReadRequest) Set(val *AppDatabaseReadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppDatabaseReadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppDatabaseReadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppDatabaseReadRequest(val *AppDatabaseReadRequest) *NullableAppDatabaseReadRequest {
	return &NullableAppDatabaseReadRequest{value: val, isSet: true}
}

func (v NullableAppDatabaseReadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppDatabaseReadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
