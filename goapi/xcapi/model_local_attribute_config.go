/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"encoding/json"
)

// checks if the LocalAttributeConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocalAttributeConfig{}

// LocalAttributeConfig struct for LocalAttributeConfig
type LocalAttributeConfig struct {
	InitialWrite []KeyValue `json:"initialWrite,omitempty"`
}

// NewLocalAttributeConfig instantiates a new LocalAttributeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalAttributeConfig() *LocalAttributeConfig {
	this := LocalAttributeConfig{}
	return &this
}

// NewLocalAttributeConfigWithDefaults instantiates a new LocalAttributeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalAttributeConfigWithDefaults() *LocalAttributeConfig {
	this := LocalAttributeConfig{}
	return &this
}

// GetInitialWrite returns the InitialWrite field value if set, zero value otherwise.
func (o *LocalAttributeConfig) GetInitialWrite() []KeyValue {
	if o == nil || IsNil(o.InitialWrite) {
		var ret []KeyValue
		return ret
	}
	return o.InitialWrite
}

// GetInitialWriteOk returns a tuple with the InitialWrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocalAttributeConfig) GetInitialWriteOk() ([]KeyValue, bool) {
	if o == nil || IsNil(o.InitialWrite) {
		return nil, false
	}
	return o.InitialWrite, true
}

// HasInitialWrite returns a boolean if a field has been set.
func (o *LocalAttributeConfig) HasInitialWrite() bool {
	if o != nil && !IsNil(o.InitialWrite) {
		return true
	}

	return false
}

// SetInitialWrite gets a reference to the given []KeyValue and assigns it to the InitialWrite field.
func (o *LocalAttributeConfig) SetInitialWrite(v []KeyValue) {
	o.InitialWrite = v
}

func (o LocalAttributeConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalAttributeConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InitialWrite) {
		toSerialize["initialWrite"] = o.InitialWrite
	}
	return toSerialize, nil
}

type NullableLocalAttributeConfig struct {
	value *LocalAttributeConfig
	isSet bool
}

func (v NullableLocalAttributeConfig) Get() *LocalAttributeConfig {
	return v.value
}

func (v *NullableLocalAttributeConfig) Set(val *LocalAttributeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalAttributeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalAttributeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalAttributeConfig(val *LocalAttributeConfig) *NullableLocalAttributeConfig {
	return &NullableLocalAttributeConfig{value: val, isSet: true}
}

func (v NullableLocalAttributeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalAttributeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
