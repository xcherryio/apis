/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"encoding/json"
)

// checks if the TimeRangeFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeRangeFilter{}

// TimeRangeFilter struct for TimeRangeFilter
type TimeRangeFilter struct {
	EarliestTime *int64 `json:"earliestTime,omitempty"`
	LatestTime   *int64 `json:"latestTime,omitempty"`
}

// NewTimeRangeFilter instantiates a new TimeRangeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeRangeFilter() *TimeRangeFilter {
	this := TimeRangeFilter{}
	return &this
}

// NewTimeRangeFilterWithDefaults instantiates a new TimeRangeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeRangeFilterWithDefaults() *TimeRangeFilter {
	this := TimeRangeFilter{}
	return &this
}

// GetEarliestTime returns the EarliestTime field value if set, zero value otherwise.
func (o *TimeRangeFilter) GetEarliestTime() int64 {
	if o == nil || IsNil(o.EarliestTime) {
		var ret int64
		return ret
	}
	return *o.EarliestTime
}

// GetEarliestTimeOk returns a tuple with the EarliestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeRangeFilter) GetEarliestTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.EarliestTime) {
		return nil, false
	}
	return o.EarliestTime, true
}

// HasEarliestTime returns a boolean if a field has been set.
func (o *TimeRangeFilter) HasEarliestTime() bool {
	if o != nil && !IsNil(o.EarliestTime) {
		return true
	}

	return false
}

// SetEarliestTime gets a reference to the given int64 and assigns it to the EarliestTime field.
func (o *TimeRangeFilter) SetEarliestTime(v int64) {
	o.EarliestTime = &v
}

// GetLatestTime returns the LatestTime field value if set, zero value otherwise.
func (o *TimeRangeFilter) GetLatestTime() int64 {
	if o == nil || IsNil(o.LatestTime) {
		var ret int64
		return ret
	}
	return *o.LatestTime
}

// GetLatestTimeOk returns a tuple with the LatestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeRangeFilter) GetLatestTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.LatestTime) {
		return nil, false
	}
	return o.LatestTime, true
}

// HasLatestTime returns a boolean if a field has been set.
func (o *TimeRangeFilter) HasLatestTime() bool {
	if o != nil && !IsNil(o.LatestTime) {
		return true
	}

	return false
}

// SetLatestTime gets a reference to the given int64 and assigns it to the LatestTime field.
func (o *TimeRangeFilter) SetLatestTime(v int64) {
	o.LatestTime = &v
}

func (o TimeRangeFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeRangeFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EarliestTime) {
		toSerialize["earliestTime"] = o.EarliestTime
	}
	if !IsNil(o.LatestTime) {
		toSerialize["latestTime"] = o.LatestTime
	}
	return toSerialize, nil
}

type NullableTimeRangeFilter struct {
	value *TimeRangeFilter
	isSet bool
}

func (v NullableTimeRangeFilter) Get() *TimeRangeFilter {
	return v.value
}

func (v *NullableTimeRangeFilter) Set(val *TimeRangeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeRangeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeRangeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeRangeFilter(val *TimeRangeFilter) *NullableTimeRangeFilter {
	return &NullableTimeRangeFilter{value: val, isSet: true}
}

func (v NullableTimeRangeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeRangeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
