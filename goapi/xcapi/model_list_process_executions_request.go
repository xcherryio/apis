/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"encoding/json"
	"fmt"
)

// checks if the ListProcessExecutionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListProcessExecutionsRequest{}

// ListProcessExecutionsRequest struct for ListProcessExecutionsRequest
type ListProcessExecutionsRequest struct {
	Namespace         string             `json:"namespace"`
	PageSize          int32              `json:"pageSize"`
	NextPageToken     *string            `json:"nextPageToken,omitempty"`
	StatusFilter      *ProcessStatus     `json:"statusFilter,omitempty"`
	StartTimeFilter   *TimeRangeFilter   `json:"startTimeFilter,omitempty"`
	ProcessTypeFilter *ProcessTypeFilter `json:"processTypeFilter,omitempty"`
	ProcessIdFilter   *ProcessIdFilter   `json:"processIdFilter,omitempty"`
}

type _ListProcessExecutionsRequest ListProcessExecutionsRequest

// NewListProcessExecutionsRequest instantiates a new ListProcessExecutionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListProcessExecutionsRequest(namespace string, pageSize int32) *ListProcessExecutionsRequest {
	this := ListProcessExecutionsRequest{}
	this.Namespace = namespace
	this.PageSize = pageSize
	return &this
}

// NewListProcessExecutionsRequestWithDefaults instantiates a new ListProcessExecutionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListProcessExecutionsRequestWithDefaults() *ListProcessExecutionsRequest {
	this := ListProcessExecutionsRequest{}
	var pageSize int32 = 100
	this.PageSize = pageSize
	return &this
}

// GetNamespace returns the Namespace field value
func (o *ListProcessExecutionsRequest) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *ListProcessExecutionsRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *ListProcessExecutionsRequest) SetNamespace(v string) {
	o.Namespace = v
}

// GetPageSize returns the PageSize field value
func (o *ListProcessExecutionsRequest) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *ListProcessExecutionsRequest) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *ListProcessExecutionsRequest) SetPageSize(v int32) {
	o.PageSize = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *ListProcessExecutionsRequest) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProcessExecutionsRequest) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *ListProcessExecutionsRequest) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *ListProcessExecutionsRequest) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetStatusFilter returns the StatusFilter field value if set, zero value otherwise.
func (o *ListProcessExecutionsRequest) GetStatusFilter() ProcessStatus {
	if o == nil || IsNil(o.StatusFilter) {
		var ret ProcessStatus
		return ret
	}
	return *o.StatusFilter
}

// GetStatusFilterOk returns a tuple with the StatusFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProcessExecutionsRequest) GetStatusFilterOk() (*ProcessStatus, bool) {
	if o == nil || IsNil(o.StatusFilter) {
		return nil, false
	}
	return o.StatusFilter, true
}

// HasStatusFilter returns a boolean if a field has been set.
func (o *ListProcessExecutionsRequest) HasStatusFilter() bool {
	if o != nil && !IsNil(o.StatusFilter) {
		return true
	}

	return false
}

// SetStatusFilter gets a reference to the given ProcessStatus and assigns it to the StatusFilter field.
func (o *ListProcessExecutionsRequest) SetStatusFilter(v ProcessStatus) {
	o.StatusFilter = &v
}

// GetStartTimeFilter returns the StartTimeFilter field value if set, zero value otherwise.
func (o *ListProcessExecutionsRequest) GetStartTimeFilter() TimeRangeFilter {
	if o == nil || IsNil(o.StartTimeFilter) {
		var ret TimeRangeFilter
		return ret
	}
	return *o.StartTimeFilter
}

// GetStartTimeFilterOk returns a tuple with the StartTimeFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProcessExecutionsRequest) GetStartTimeFilterOk() (*TimeRangeFilter, bool) {
	if o == nil || IsNil(o.StartTimeFilter) {
		return nil, false
	}
	return o.StartTimeFilter, true
}

// HasStartTimeFilter returns a boolean if a field has been set.
func (o *ListProcessExecutionsRequest) HasStartTimeFilter() bool {
	if o != nil && !IsNil(o.StartTimeFilter) {
		return true
	}

	return false
}

// SetStartTimeFilter gets a reference to the given TimeRangeFilter and assigns it to the StartTimeFilter field.
func (o *ListProcessExecutionsRequest) SetStartTimeFilter(v TimeRangeFilter) {
	o.StartTimeFilter = &v
}

// GetProcessTypeFilter returns the ProcessTypeFilter field value if set, zero value otherwise.
func (o *ListProcessExecutionsRequest) GetProcessTypeFilter() ProcessTypeFilter {
	if o == nil || IsNil(o.ProcessTypeFilter) {
		var ret ProcessTypeFilter
		return ret
	}
	return *o.ProcessTypeFilter
}

// GetProcessTypeFilterOk returns a tuple with the ProcessTypeFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProcessExecutionsRequest) GetProcessTypeFilterOk() (*ProcessTypeFilter, bool) {
	if o == nil || IsNil(o.ProcessTypeFilter) {
		return nil, false
	}
	return o.ProcessTypeFilter, true
}

// HasProcessTypeFilter returns a boolean if a field has been set.
func (o *ListProcessExecutionsRequest) HasProcessTypeFilter() bool {
	if o != nil && !IsNil(o.ProcessTypeFilter) {
		return true
	}

	return false
}

// SetProcessTypeFilter gets a reference to the given ProcessTypeFilter and assigns it to the ProcessTypeFilter field.
func (o *ListProcessExecutionsRequest) SetProcessTypeFilter(v ProcessTypeFilter) {
	o.ProcessTypeFilter = &v
}

// GetProcessIdFilter returns the ProcessIdFilter field value if set, zero value otherwise.
func (o *ListProcessExecutionsRequest) GetProcessIdFilter() ProcessIdFilter {
	if o == nil || IsNil(o.ProcessIdFilter) {
		var ret ProcessIdFilter
		return ret
	}
	return *o.ProcessIdFilter
}

// GetProcessIdFilterOk returns a tuple with the ProcessIdFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListProcessExecutionsRequest) GetProcessIdFilterOk() (*ProcessIdFilter, bool) {
	if o == nil || IsNil(o.ProcessIdFilter) {
		return nil, false
	}
	return o.ProcessIdFilter, true
}

// HasProcessIdFilter returns a boolean if a field has been set.
func (o *ListProcessExecutionsRequest) HasProcessIdFilter() bool {
	if o != nil && !IsNil(o.ProcessIdFilter) {
		return true
	}

	return false
}

// SetProcessIdFilter gets a reference to the given ProcessIdFilter and assigns it to the ProcessIdFilter field.
func (o *ListProcessExecutionsRequest) SetProcessIdFilter(v ProcessIdFilter) {
	o.ProcessIdFilter = &v
}

func (o ListProcessExecutionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListProcessExecutionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["namespace"] = o.Namespace
	toSerialize["pageSize"] = o.PageSize
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	if !IsNil(o.StatusFilter) {
		toSerialize["statusFilter"] = o.StatusFilter
	}
	if !IsNil(o.StartTimeFilter) {
		toSerialize["startTimeFilter"] = o.StartTimeFilter
	}
	if !IsNil(o.ProcessTypeFilter) {
		toSerialize["processTypeFilter"] = o.ProcessTypeFilter
	}
	if !IsNil(o.ProcessIdFilter) {
		toSerialize["processIdFilter"] = o.ProcessIdFilter
	}
	return toSerialize, nil
}

func (o *ListProcessExecutionsRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"namespace",
		"pageSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListProcessExecutionsRequest := _ListProcessExecutionsRequest{}

	err = json.Unmarshal(bytes, &varListProcessExecutionsRequest)

	if err != nil {
		return err
	}

	*o = ListProcessExecutionsRequest(varListProcessExecutionsRequest)

	return err
}

type NullableListProcessExecutionsRequest struct {
	value *ListProcessExecutionsRequest
	isSet bool
}

func (v NullableListProcessExecutionsRequest) Get() *ListProcessExecutionsRequest {
	return v.value
}

func (v *NullableListProcessExecutionsRequest) Set(val *ListProcessExecutionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListProcessExecutionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListProcessExecutionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListProcessExecutionsRequest(val *ListProcessExecutionsRequest) *NullableListProcessExecutionsRequest {
	return &NullableListProcessExecutionsRequest{value: val, isSet: true}
}

func (v NullableListProcessExecutionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListProcessExecutionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
