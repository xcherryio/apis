/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"encoding/json"
)

// checks if the ProcessIdFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessIdFilter{}

// ProcessIdFilter struct for ProcessIdFilter
type ProcessIdFilter struct {
	ProcessId *string `json:"processId,omitempty"`
}

// NewProcessIdFilter instantiates a new ProcessIdFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessIdFilter() *ProcessIdFilter {
	this := ProcessIdFilter{}
	return &this
}

// NewProcessIdFilterWithDefaults instantiates a new ProcessIdFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessIdFilterWithDefaults() *ProcessIdFilter {
	this := ProcessIdFilter{}
	return &this
}

// GetProcessId returns the ProcessId field value if set, zero value otherwise.
func (o *ProcessIdFilter) GetProcessId() string {
	if o == nil || IsNil(o.ProcessId) {
		var ret string
		return ret
	}
	return *o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessIdFilter) GetProcessIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessId) {
		return nil, false
	}
	return o.ProcessId, true
}

// HasProcessId returns a boolean if a field has been set.
func (o *ProcessIdFilter) HasProcessId() bool {
	if o != nil && !IsNil(o.ProcessId) {
		return true
	}

	return false
}

// SetProcessId gets a reference to the given string and assigns it to the ProcessId field.
func (o *ProcessIdFilter) SetProcessId(v string) {
	o.ProcessId = &v
}

func (o ProcessIdFilter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessIdFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProcessId) {
		toSerialize["processId"] = o.ProcessId
	}
	return toSerialize, nil
}

type NullableProcessIdFilter struct {
	value *ProcessIdFilter
	isSet bool
}

func (v NullableProcessIdFilter) Get() *ProcessIdFilter {
	return v.value
}

func (v *NullableProcessIdFilter) Set(val *ProcessIdFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessIdFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessIdFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessIdFilter(val *ProcessIdFilter) *NullableProcessIdFilter {
	return &NullableProcessIdFilter{value: val, isSet: true}
}

func (v NullableProcessIdFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessIdFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
