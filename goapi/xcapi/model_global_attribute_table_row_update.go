/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"encoding/json"
	"fmt"
)

// checks if the GlobalAttributeTableRowUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalAttributeTableRowUpdate{}

// GlobalAttributeTableRowUpdate struct for GlobalAttributeTableRowUpdate
type GlobalAttributeTableRowUpdate struct {
	TableName     string             `json:"tableName"`
	UpdateColumns []TableColumnValue `json:"updateColumns,omitempty"`
}

type _GlobalAttributeTableRowUpdate GlobalAttributeTableRowUpdate

// NewGlobalAttributeTableRowUpdate instantiates a new GlobalAttributeTableRowUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalAttributeTableRowUpdate(tableName string) *GlobalAttributeTableRowUpdate {
	this := GlobalAttributeTableRowUpdate{}
	this.TableName = tableName
	return &this
}

// NewGlobalAttributeTableRowUpdateWithDefaults instantiates a new GlobalAttributeTableRowUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalAttributeTableRowUpdateWithDefaults() *GlobalAttributeTableRowUpdate {
	this := GlobalAttributeTableRowUpdate{}
	return &this
}

// GetTableName returns the TableName field value
func (o *GlobalAttributeTableRowUpdate) GetTableName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TableName
}

// GetTableNameOk returns a tuple with the TableName field value
// and a boolean to check if the value has been set.
func (o *GlobalAttributeTableRowUpdate) GetTableNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TableName, true
}

// SetTableName sets field value
func (o *GlobalAttributeTableRowUpdate) SetTableName(v string) {
	o.TableName = v
}

// GetUpdateColumns returns the UpdateColumns field value if set, zero value otherwise.
func (o *GlobalAttributeTableRowUpdate) GetUpdateColumns() []TableColumnValue {
	if o == nil || IsNil(o.UpdateColumns) {
		var ret []TableColumnValue
		return ret
	}
	return o.UpdateColumns
}

// GetUpdateColumnsOk returns a tuple with the UpdateColumns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalAttributeTableRowUpdate) GetUpdateColumnsOk() ([]TableColumnValue, bool) {
	if o == nil || IsNil(o.UpdateColumns) {
		return nil, false
	}
	return o.UpdateColumns, true
}

// HasUpdateColumns returns a boolean if a field has been set.
func (o *GlobalAttributeTableRowUpdate) HasUpdateColumns() bool {
	if o != nil && !IsNil(o.UpdateColumns) {
		return true
	}

	return false
}

// SetUpdateColumns gets a reference to the given []TableColumnValue and assigns it to the UpdateColumns field.
func (o *GlobalAttributeTableRowUpdate) SetUpdateColumns(v []TableColumnValue) {
	o.UpdateColumns = v
}

func (o GlobalAttributeTableRowUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalAttributeTableRowUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tableName"] = o.TableName
	if !IsNil(o.UpdateColumns) {
		toSerialize["updateColumns"] = o.UpdateColumns
	}
	return toSerialize, nil
}

func (o *GlobalAttributeTableRowUpdate) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tableName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGlobalAttributeTableRowUpdate := _GlobalAttributeTableRowUpdate{}

	err = json.Unmarshal(bytes, &varGlobalAttributeTableRowUpdate)

	if err != nil {
		return err
	}

	*o = GlobalAttributeTableRowUpdate(varGlobalAttributeTableRowUpdate)

	return err
}

type NullableGlobalAttributeTableRowUpdate struct {
	value *GlobalAttributeTableRowUpdate
	isSet bool
}

func (v NullableGlobalAttributeTableRowUpdate) Get() *GlobalAttributeTableRowUpdate {
	return v.value
}

func (v *NullableGlobalAttributeTableRowUpdate) Set(val *GlobalAttributeTableRowUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalAttributeTableRowUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalAttributeTableRowUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalAttributeTableRowUpdate(val *GlobalAttributeTableRowUpdate) *NullableGlobalAttributeTableRowUpdate {
	return &NullableGlobalAttributeTableRowUpdate{value: val, isSet: true}
}

func (v NullableGlobalAttributeTableRowUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalAttributeTableRowUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
