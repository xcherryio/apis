/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"encoding/json"
	"fmt"
)

// checks if the NotifyImmediateTasksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyImmediateTasksRequest{}

// NotifyImmediateTasksRequest struct for NotifyImmediateTasksRequest
type NotifyImmediateTasksRequest struct {
	ShardId int32 `json:"shardId"`
	// optional field for distributed database without global secondary index, to pull for specific task rather than a page
	Namespace *string `json:"namespace,omitempty"`
	// optional field for distributed database without global secondary index, to pull for specific task rather than a page
	ProcessId *string `json:"processId,omitempty"`
	// optional field for distributed database without global secondary index, to pull for specific task rather than a page
	ProcessExecutionId *string `json:"processExecutionId,omitempty"`
}

type _NotifyImmediateTasksRequest NotifyImmediateTasksRequest

// NewNotifyImmediateTasksRequest instantiates a new NotifyImmediateTasksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyImmediateTasksRequest(shardId int32) *NotifyImmediateTasksRequest {
	this := NotifyImmediateTasksRequest{}
	this.ShardId = shardId
	return &this
}

// NewNotifyImmediateTasksRequestWithDefaults instantiates a new NotifyImmediateTasksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyImmediateTasksRequestWithDefaults() *NotifyImmediateTasksRequest {
	this := NotifyImmediateTasksRequest{}
	return &this
}

// GetShardId returns the ShardId field value
func (o *NotifyImmediateTasksRequest) GetShardId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ShardId
}

// GetShardIdOk returns a tuple with the ShardId field value
// and a boolean to check if the value has been set.
func (o *NotifyImmediateTasksRequest) GetShardIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShardId, true
}

// SetShardId sets field value
func (o *NotifyImmediateTasksRequest) SetShardId(v int32) {
	o.ShardId = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *NotifyImmediateTasksRequest) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyImmediateTasksRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *NotifyImmediateTasksRequest) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *NotifyImmediateTasksRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetProcessId returns the ProcessId field value if set, zero value otherwise.
func (o *NotifyImmediateTasksRequest) GetProcessId() string {
	if o == nil || IsNil(o.ProcessId) {
		var ret string
		return ret
	}
	return *o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyImmediateTasksRequest) GetProcessIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessId) {
		return nil, false
	}
	return o.ProcessId, true
}

// HasProcessId returns a boolean if a field has been set.
func (o *NotifyImmediateTasksRequest) HasProcessId() bool {
	if o != nil && !IsNil(o.ProcessId) {
		return true
	}

	return false
}

// SetProcessId gets a reference to the given string and assigns it to the ProcessId field.
func (o *NotifyImmediateTasksRequest) SetProcessId(v string) {
	o.ProcessId = &v
}

// GetProcessExecutionId returns the ProcessExecutionId field value if set, zero value otherwise.
func (o *NotifyImmediateTasksRequest) GetProcessExecutionId() string {
	if o == nil || IsNil(o.ProcessExecutionId) {
		var ret string
		return ret
	}
	return *o.ProcessExecutionId
}

// GetProcessExecutionIdOk returns a tuple with the ProcessExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyImmediateTasksRequest) GetProcessExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessExecutionId) {
		return nil, false
	}
	return o.ProcessExecutionId, true
}

// HasProcessExecutionId returns a boolean if a field has been set.
func (o *NotifyImmediateTasksRequest) HasProcessExecutionId() bool {
	if o != nil && !IsNil(o.ProcessExecutionId) {
		return true
	}

	return false
}

// SetProcessExecutionId gets a reference to the given string and assigns it to the ProcessExecutionId field.
func (o *NotifyImmediateTasksRequest) SetProcessExecutionId(v string) {
	o.ProcessExecutionId = &v
}

func (o NotifyImmediateTasksRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyImmediateTasksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shardId"] = o.ShardId
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.ProcessId) {
		toSerialize["processId"] = o.ProcessId
	}
	if !IsNil(o.ProcessExecutionId) {
		toSerialize["processExecutionId"] = o.ProcessExecutionId
	}
	return toSerialize, nil
}

func (o *NotifyImmediateTasksRequest) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shardId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNotifyImmediateTasksRequest := _NotifyImmediateTasksRequest{}

	err = json.Unmarshal(bytes, &varNotifyImmediateTasksRequest)

	if err != nil {
		return err
	}

	*o = NotifyImmediateTasksRequest(varNotifyImmediateTasksRequest)

	return err
}

type NullableNotifyImmediateTasksRequest struct {
	value *NotifyImmediateTasksRequest
	isSet bool
}

func (v NullableNotifyImmediateTasksRequest) Get() *NotifyImmediateTasksRequest {
	return v.value
}

func (v *NullableNotifyImmediateTasksRequest) Set(val *NotifyImmediateTasksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyImmediateTasksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyImmediateTasksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyImmediateTasksRequest(val *NotifyImmediateTasksRequest) *NullableNotifyImmediateTasksRequest {
	return &NullableNotifyImmediateTasksRequest{value: val, isSet: true}
}

func (v NullableNotifyImmediateTasksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyImmediateTasksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
