/*
xCherry APIs

This APIs between xCherry service and SDKs

API version: 0.0.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package xcapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ProcessExecutionStartRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProcessExecutionStartRequest{}

// ProcessExecutionStartRequest the request for starting a process execution
type ProcessExecutionStartRequest struct {
	Namespace string `json:"namespace"`
	// the user business identifier for the process, which can be used for multiple ProcessExecution based on ProcessIdReusePolicy
	ProcessId string `json:"processId"`
	// the process type for SDK to lookup the process definition class
	ProcessType string `json:"processType"`
	// the URL for xcherry async service to make callback to worker
	WorkerUrl string `json:"workerUrl"`
	// StateId of the first AsyncState to start
	StartStateId       *string             `json:"startStateId,omitempty"`
	StartStateInput    *EncodedObject      `json:"startStateInput,omitempty"`
	StartStateConfig   *AsyncStateConfig   `json:"startStateConfig,omitempty"`
	ProcessStartConfig *ProcessStartConfig `json:"processStartConfig,omitempty"`
}

type _ProcessExecutionStartRequest ProcessExecutionStartRequest

// NewProcessExecutionStartRequest instantiates a new ProcessExecutionStartRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessExecutionStartRequest(namespace string, processId string, processType string, workerUrl string) *ProcessExecutionStartRequest {
	this := ProcessExecutionStartRequest{}
	this.Namespace = namespace
	this.ProcessId = processId
	this.ProcessType = processType
	this.WorkerUrl = workerUrl
	return &this
}

// NewProcessExecutionStartRequestWithDefaults instantiates a new ProcessExecutionStartRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessExecutionStartRequestWithDefaults() *ProcessExecutionStartRequest {
	this := ProcessExecutionStartRequest{}
	return &this
}

// GetNamespace returns the Namespace field value
func (o *ProcessExecutionStartRequest) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *ProcessExecutionStartRequest) SetNamespace(v string) {
	o.Namespace = v
}

// GetProcessId returns the ProcessId field value
func (o *ProcessExecutionStartRequest) GetProcessId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessId
}

// GetProcessIdOk returns a tuple with the ProcessId field value
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetProcessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessId, true
}

// SetProcessId sets field value
func (o *ProcessExecutionStartRequest) SetProcessId(v string) {
	o.ProcessId = v
}

// GetProcessType returns the ProcessType field value
func (o *ProcessExecutionStartRequest) GetProcessType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProcessType
}

// GetProcessTypeOk returns a tuple with the ProcessType field value
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetProcessTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessType, true
}

// SetProcessType sets field value
func (o *ProcessExecutionStartRequest) SetProcessType(v string) {
	o.ProcessType = v
}

// GetWorkerUrl returns the WorkerUrl field value
func (o *ProcessExecutionStartRequest) GetWorkerUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkerUrl
}

// GetWorkerUrlOk returns a tuple with the WorkerUrl field value
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetWorkerUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkerUrl, true
}

// SetWorkerUrl sets field value
func (o *ProcessExecutionStartRequest) SetWorkerUrl(v string) {
	o.WorkerUrl = v
}

// GetStartStateId returns the StartStateId field value if set, zero value otherwise.
func (o *ProcessExecutionStartRequest) GetStartStateId() string {
	if o == nil || IsNil(o.StartStateId) {
		var ret string
		return ret
	}
	return *o.StartStateId
}

// GetStartStateIdOk returns a tuple with the StartStateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetStartStateIdOk() (*string, bool) {
	if o == nil || IsNil(o.StartStateId) {
		return nil, false
	}
	return o.StartStateId, true
}

// HasStartStateId returns a boolean if a field has been set.
func (o *ProcessExecutionStartRequest) HasStartStateId() bool {
	if o != nil && !IsNil(o.StartStateId) {
		return true
	}

	return false
}

// SetStartStateId gets a reference to the given string and assigns it to the StartStateId field.
func (o *ProcessExecutionStartRequest) SetStartStateId(v string) {
	o.StartStateId = &v
}

// GetStartStateInput returns the StartStateInput field value if set, zero value otherwise.
func (o *ProcessExecutionStartRequest) GetStartStateInput() EncodedObject {
	if o == nil || IsNil(o.StartStateInput) {
		var ret EncodedObject
		return ret
	}
	return *o.StartStateInput
}

// GetStartStateInputOk returns a tuple with the StartStateInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetStartStateInputOk() (*EncodedObject, bool) {
	if o == nil || IsNil(o.StartStateInput) {
		return nil, false
	}
	return o.StartStateInput, true
}

// HasStartStateInput returns a boolean if a field has been set.
func (o *ProcessExecutionStartRequest) HasStartStateInput() bool {
	if o != nil && !IsNil(o.StartStateInput) {
		return true
	}

	return false
}

// SetStartStateInput gets a reference to the given EncodedObject and assigns it to the StartStateInput field.
func (o *ProcessExecutionStartRequest) SetStartStateInput(v EncodedObject) {
	o.StartStateInput = &v
}

// GetStartStateConfig returns the StartStateConfig field value if set, zero value otherwise.
func (o *ProcessExecutionStartRequest) GetStartStateConfig() AsyncStateConfig {
	if o == nil || IsNil(o.StartStateConfig) {
		var ret AsyncStateConfig
		return ret
	}
	return *o.StartStateConfig
}

// GetStartStateConfigOk returns a tuple with the StartStateConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetStartStateConfigOk() (*AsyncStateConfig, bool) {
	if o == nil || IsNil(o.StartStateConfig) {
		return nil, false
	}
	return o.StartStateConfig, true
}

// HasStartStateConfig returns a boolean if a field has been set.
func (o *ProcessExecutionStartRequest) HasStartStateConfig() bool {
	if o != nil && !IsNil(o.StartStateConfig) {
		return true
	}

	return false
}

// SetStartStateConfig gets a reference to the given AsyncStateConfig and assigns it to the StartStateConfig field.
func (o *ProcessExecutionStartRequest) SetStartStateConfig(v AsyncStateConfig) {
	o.StartStateConfig = &v
}

// GetProcessStartConfig returns the ProcessStartConfig field value if set, zero value otherwise.
func (o *ProcessExecutionStartRequest) GetProcessStartConfig() ProcessStartConfig {
	if o == nil || IsNil(o.ProcessStartConfig) {
		var ret ProcessStartConfig
		return ret
	}
	return *o.ProcessStartConfig
}

// GetProcessStartConfigOk returns a tuple with the ProcessStartConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProcessExecutionStartRequest) GetProcessStartConfigOk() (*ProcessStartConfig, bool) {
	if o == nil || IsNil(o.ProcessStartConfig) {
		return nil, false
	}
	return o.ProcessStartConfig, true
}

// HasProcessStartConfig returns a boolean if a field has been set.
func (o *ProcessExecutionStartRequest) HasProcessStartConfig() bool {
	if o != nil && !IsNil(o.ProcessStartConfig) {
		return true
	}

	return false
}

// SetProcessStartConfig gets a reference to the given ProcessStartConfig and assigns it to the ProcessStartConfig field.
func (o *ProcessExecutionStartRequest) SetProcessStartConfig(v ProcessStartConfig) {
	o.ProcessStartConfig = &v
}

func (o ProcessExecutionStartRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProcessExecutionStartRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["namespace"] = o.Namespace
	toSerialize["processId"] = o.ProcessId
	toSerialize["processType"] = o.ProcessType
	toSerialize["workerUrl"] = o.WorkerUrl
	if !IsNil(o.StartStateId) {
		toSerialize["startStateId"] = o.StartStateId
	}
	if !IsNil(o.StartStateInput) {
		toSerialize["startStateInput"] = o.StartStateInput
	}
	if !IsNil(o.StartStateConfig) {
		toSerialize["startStateConfig"] = o.StartStateConfig
	}
	if !IsNil(o.ProcessStartConfig) {
		toSerialize["processStartConfig"] = o.ProcessStartConfig
	}
	return toSerialize, nil
}

func (o *ProcessExecutionStartRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"namespace",
		"processId",
		"processType",
		"workerUrl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProcessExecutionStartRequest := _ProcessExecutionStartRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProcessExecutionStartRequest)

	if err != nil {
		return err
	}

	*o = ProcessExecutionStartRequest(varProcessExecutionStartRequest)

	return err
}

type NullableProcessExecutionStartRequest struct {
	value *ProcessExecutionStartRequest
	isSet bool
}

func (v NullableProcessExecutionStartRequest) Get() *ProcessExecutionStartRequest {
	return v.value
}

func (v *NullableProcessExecutionStartRequest) Set(val *ProcessExecutionStartRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessExecutionStartRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessExecutionStartRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessExecutionStartRequest(val *ProcessExecutionStartRequest) *NullableProcessExecutionStartRequest {
	return &NullableProcessExecutionStartRequest{value: val, isSet: true}
}

func (v NullableProcessExecutionStartRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessExecutionStartRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
